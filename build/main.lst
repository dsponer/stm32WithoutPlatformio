ARM GAS  C:\Users\robot1\AppData\Local\Temp\cckFiL45.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SystemClock_Config,"ax",%progbits
  16              		.align	1
  17              		.global	SystemClock_Config
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	SystemClock_Config:
  25              	.LFB67:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * Copyright (c) 2019 STMicroelectronics International N.V. 
  14:Src/main.c    ****   * All rights reserved.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/main.c    ****   *
  19:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  21:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/main.c    ****   *    and/or other materials provided with the distribution.
  24:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/main.c    ****   *    derived from this software without specific written permission.
  27:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/main.c    ****   *    this license is void and will automatically terminate your rights under 
  32:Src/main.c    ****   *    this license. 
ARM GAS  C:\Users\robot1\AppData\Local\Temp\cckFiL45.s 			page 2


  33:Src/main.c    ****   *
  34:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/main.c    ****   *
  47:Src/main.c    ****   ******************************************************************************
  48:Src/main.c    ****   */
  49:Src/main.c    **** /* USER CODE END Header */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  52:Src/main.c    **** #include "main.h"
  53:Src/main.c    **** #include "usb_device.h"
  54:Src/main.c    **** #include "gpio.h"
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  57:Src/main.c    **** /* USER CODE BEGIN Includes */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE END Includes */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  62:Src/main.c    **** /* USER CODE BEGIN PTD */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE END PTD */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  67:Src/main.c    **** /* USER CODE BEGIN PD */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* USER CODE END PD */
  70:Src/main.c    **** 
  71:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  72:Src/main.c    **** /* USER CODE BEGIN PM */
  73:Src/main.c    **** 
  74:Src/main.c    **** /* USER CODE END PM */
  75:Src/main.c    **** 
  76:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  77:Src/main.c    **** 
  78:Src/main.c    **** /* USER CODE BEGIN PV */
  79:Src/main.c    **** 
  80:Src/main.c    **** /* USER CODE END PV */
  81:Src/main.c    **** 
  82:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  83:Src/main.c    **** void SystemClock_Config(void);
  84:Src/main.c    **** /* USER CODE BEGIN PFP */
  85:Src/main.c    **** 
  86:Src/main.c    **** /* USER CODE END PFP */
  87:Src/main.c    **** 
  88:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  89:Src/main.c    **** /* USER CODE BEGIN 0 */
ARM GAS  C:\Users\robot1\AppData\Local\Temp\cckFiL45.s 			page 3


  90:Src/main.c    **** 
  91:Src/main.c    **** /* USER CODE END 0 */
  92:Src/main.c    **** 
  93:Src/main.c    **** /**
  94:Src/main.c    ****   * @brief  The application entry point.
  95:Src/main.c    ****   * @retval int
  96:Src/main.c    ****   */
  97:Src/main.c    **** int main(void)
  98:Src/main.c    **** {
  99:Src/main.c    ****   /* USER CODE BEGIN 1 */
 100:Src/main.c    **** 
 101:Src/main.c    ****   /* USER CODE END 1 */
 102:Src/main.c    **** 
 103:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 106:Src/main.c    ****   HAL_Init();
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* USER CODE BEGIN Init */
 109:Src/main.c    **** 
 110:Src/main.c    ****   /* USER CODE END Init */
 111:Src/main.c    **** 
 112:Src/main.c    ****   /* Configure the system clock */
 113:Src/main.c    ****   SystemClock_Config();
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* USER CODE END SysInit */
 118:Src/main.c    **** 
 119:Src/main.c    ****   /* Initialize all configured peripherals */
 120:Src/main.c    ****   MX_GPIO_Init();
 121:Src/main.c    ****   MX_USB_DEVICE_Init();
 122:Src/main.c    ****   /* USER CODE BEGIN 2 */
 123:Src/main.c    **** 
 124:Src/main.c    ****   /* USER CODE END 2 */
 125:Src/main.c    **** 
 126:Src/main.c    ****   /* Infinite loop */
 127:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 128:Src/main.c    ****   while (1)
 129:Src/main.c    ****   {
 130:Src/main.c    ****     /* USER CODE END WHILE */
 131:Src/main.c    **** 
 132:Src/main.c    ****     /* USER CODE BEGIN 3 */
 133:Src/main.c    ****   }
 134:Src/main.c    ****   /* USER CODE END 3 */
 135:Src/main.c    **** }
 136:Src/main.c    **** 
 137:Src/main.c    **** /**
 138:Src/main.c    ****   * @brief System Clock Configuration
 139:Src/main.c    ****   * @retval None
 140:Src/main.c    ****   */
 141:Src/main.c    **** void SystemClock_Config(void)
 142:Src/main.c    **** {
  27              		.loc 1 142 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 80
  30              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\robot1\AppData\Local\Temp\cckFiL45.s 			page 4


  31 0000 30B5     		push	{r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 95B0     		sub	sp, sp, #84
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 96
 143:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  40              		.loc 1 143 3 view .LVU1
  41              		.loc 1 143 22 is_stmt 0 view .LVU2
  42 0004 0024     		movs	r4, #0
  43 0006 0C94     		str	r4, [sp, #48]
  44 0008 0D94     		str	r4, [sp, #52]
  45 000a 0F94     		str	r4, [sp, #60]
  46 000c 1094     		str	r4, [sp, #64]
 144:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  47              		.loc 1 144 3 is_stmt 1 view .LVU3
  48              		.loc 1 144 22 is_stmt 0 view .LVU4
  49 000e 0594     		str	r4, [sp, #20]
  50 0010 0694     		str	r4, [sp, #24]
  51 0012 0794     		str	r4, [sp, #28]
  52 0014 0894     		str	r4, [sp, #32]
  53 0016 0994     		str	r4, [sp, #36]
 145:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  54              		.loc 1 145 3 is_stmt 1 view .LVU5
  55              		.loc 1 145 28 is_stmt 0 view .LVU6
  56 0018 0194     		str	r4, [sp, #4]
  57 001a 0294     		str	r4, [sp, #8]
  58 001c 0394     		str	r4, [sp, #12]
  59 001e 0494     		str	r4, [sp, #16]
 146:Src/main.c    **** 
 147:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 148:Src/main.c    ****   */
 149:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  60              		.loc 1 149 3 is_stmt 1 view .LVU7
  61              		.loc 1 149 36 is_stmt 0 view .LVU8
  62 0020 0122     		movs	r2, #1
  63 0022 0A92     		str	r2, [sp, #40]
 150:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  64              		.loc 1 150 3 is_stmt 1 view .LVU9
  65              		.loc 1 150 30 is_stmt 0 view .LVU10
  66 0024 4FF48033 		mov	r3, #65536
  67 0028 0B93     		str	r3, [sp, #44]
 151:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
  68              		.loc 1 151 3 is_stmt 1 view .LVU11
 152:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  69              		.loc 1 152 3 view .LVU12
  70              		.loc 1 152 30 is_stmt 0 view .LVU13
  71 002a 0E92     		str	r2, [sp, #56]
 153:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  72              		.loc 1 153 3 is_stmt 1 view .LVU14
  73              		.loc 1 153 34 is_stmt 0 view .LVU15
  74 002c 0225     		movs	r5, #2
  75 002e 1195     		str	r5, [sp, #68]
 154:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
ARM GAS  C:\Users\robot1\AppData\Local\Temp\cckFiL45.s 			page 5


  76              		.loc 1 154 3 is_stmt 1 view .LVU16
  77              		.loc 1 154 35 is_stmt 0 view .LVU17
  78 0030 1293     		str	r3, [sp, #72]
 155:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  79              		.loc 1 155 3 is_stmt 1 view .LVU18
  80              		.loc 1 155 32 is_stmt 0 view .LVU19
  81 0032 4FF4E013 		mov	r3, #1835008
  82 0036 1393     		str	r3, [sp, #76]
 156:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  83              		.loc 1 156 3 is_stmt 1 view .LVU20
  84              		.loc 1 156 7 is_stmt 0 view .LVU21
  85 0038 0AA8     		add	r0, sp, #40
  86 003a FFF7FEFF 		bl	HAL_RCC_OscConfig
  87              	.LVL0:
 157:Src/main.c    ****   {
 158:Src/main.c    ****     Error_Handler();
 159:Src/main.c    ****   }
 160:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 161:Src/main.c    ****   */
 162:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  88              		.loc 1 162 3 is_stmt 1 view .LVU22
  89              		.loc 1 162 31 is_stmt 0 view .LVU23
  90 003e 0F23     		movs	r3, #15
  91 0040 0593     		str	r3, [sp, #20]
 163:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 164:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  92              		.loc 1 164 3 is_stmt 1 view .LVU24
  93              		.loc 1 164 34 is_stmt 0 view .LVU25
  94 0042 0695     		str	r5, [sp, #24]
 165:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  95              		.loc 1 165 3 is_stmt 1 view .LVU26
  96              		.loc 1 165 35 is_stmt 0 view .LVU27
  97 0044 0794     		str	r4, [sp, #28]
 166:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
  98              		.loc 1 166 3 is_stmt 1 view .LVU28
  99              		.loc 1 166 36 is_stmt 0 view .LVU29
 100 0046 4FF48063 		mov	r3, #1024
 101 004a 0893     		str	r3, [sp, #32]
 167:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 102              		.loc 1 167 3 is_stmt 1 view .LVU30
 103              		.loc 1 167 36 is_stmt 0 view .LVU31
 104 004c 0994     		str	r4, [sp, #36]
 168:Src/main.c    **** 
 169:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 105              		.loc 1 169 3 is_stmt 1 view .LVU32
 106              		.loc 1 169 7 is_stmt 0 view .LVU33
 107 004e 2946     		mov	r1, r5
 108 0050 05A8     		add	r0, sp, #20
 109 0052 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 110              	.LVL1:
 170:Src/main.c    ****   {
 171:Src/main.c    ****     Error_Handler();
 172:Src/main.c    ****   }
 173:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB;
 111              		.loc 1 173 3 is_stmt 1 view .LVU34
 112              		.loc 1 173 38 is_stmt 0 view .LVU35
 113 0056 1023     		movs	r3, #16
ARM GAS  C:\Users\robot1\AppData\Local\Temp\cckFiL45.s 			page 6


 114 0058 0193     		str	r3, [sp, #4]
 174:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 115              		.loc 1 174 3 is_stmt 1 view .LVU36
 116              		.loc 1 174 35 is_stmt 0 view .LVU37
 117 005a 0494     		str	r4, [sp, #16]
 175:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 118              		.loc 1 175 3 is_stmt 1 view .LVU38
 119              		.loc 1 175 7 is_stmt 0 view .LVU39
 120 005c 01A8     		add	r0, sp, #4
 121 005e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 122              	.LVL2:
 176:Src/main.c    ****   {
 177:Src/main.c    ****     Error_Handler();
 178:Src/main.c    ****   }
 179:Src/main.c    **** }
 123              		.loc 1 179 1 view .LVU40
 124 0062 15B0     		add	sp, sp, #84
 125              	.LCFI2:
 126              		.cfi_def_cfa_offset 12
 127              		@ sp needed
 128 0064 30BD     		pop	{r4, r5, pc}
 129              		.cfi_endproc
 130              	.LFE67:
 132              		.section	.text.main,"ax",%progbits
 133              		.align	1
 134              		.global	main
 135              		.syntax unified
 136              		.thumb
 137              		.thumb_func
 138              		.fpu softvfp
 140              	main:
 141              	.LFB66:
  98:Src/main.c    ****   /* USER CODE BEGIN 1 */
 142              		.loc 1 98 1 is_stmt 1 view -0
 143              		.cfi_startproc
 144              		@ Volatile: function does not return.
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147 0000 08B5     		push	{r3, lr}
 148              	.LCFI3:
 149              		.cfi_def_cfa_offset 8
 150              		.cfi_offset 3, -8
 151              		.cfi_offset 14, -4
 106:Src/main.c    **** 
 152              		.loc 1 106 3 view .LVU42
 153 0002 FFF7FEFF 		bl	HAL_Init
 154              	.LVL3:
 113:Src/main.c    **** 
 155              		.loc 1 113 3 view .LVU43
 156 0006 FFF7FEFF 		bl	SystemClock_Config
 157              	.LVL4:
 120:Src/main.c    ****   MX_USB_DEVICE_Init();
 158              		.loc 1 120 3 view .LVU44
 159 000a FFF7FEFF 		bl	MX_GPIO_Init
 160              	.LVL5:
 121:Src/main.c    ****   /* USER CODE BEGIN 2 */
 161              		.loc 1 121 3 view .LVU45
ARM GAS  C:\Users\robot1\AppData\Local\Temp\cckFiL45.s 			page 7


 162 000e FFF7FEFF 		bl	MX_USB_DEVICE_Init
 163              	.LVL6:
 164              	.L4:
 128:Src/main.c    ****   {
 165              		.loc 1 128 3 discriminator 1 view .LVU46
 133:Src/main.c    ****   /* USER CODE END 3 */
 166              		.loc 1 133 3 discriminator 1 view .LVU47
 167 0012 FEE7     		b	.L4
 168              		.cfi_endproc
 169              	.LFE66:
 171              		.section	.text.Error_Handler,"ax",%progbits
 172              		.align	1
 173              		.global	Error_Handler
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 177              		.fpu softvfp
 179              	Error_Handler:
 180              	.LFB68:
 180:Src/main.c    **** 
 181:Src/main.c    **** /* USER CODE BEGIN 4 */
 182:Src/main.c    **** 
 183:Src/main.c    **** /* USER CODE END 4 */
 184:Src/main.c    **** 
 185:Src/main.c    **** /**
 186:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 187:Src/main.c    ****   * @retval None
 188:Src/main.c    ****   */
 189:Src/main.c    **** void Error_Handler(void)
 190:Src/main.c    **** {
 181              		.loc 1 190 1 view -0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 0, uses_anonymous_args = 0
 185              		@ link register save eliminated.
 191:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 192:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 193:Src/main.c    **** 
 194:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 195:Src/main.c    **** }
 186              		.loc 1 195 1 view .LVU49
 187 0000 7047     		bx	lr
 188              		.cfi_endproc
 189              	.LFE68:
 191              		.text
 192              	.Letext0:
 193              		.file 2 "f:\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.7-20190524-0603\\arm-none-eabi\\include\\m
 194              		.file 3 "f:\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.7-20190524-0603\\arm-none-eabi\\include\\s
 195              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 196              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 197              		.file 6 "f:\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.7-20190524-0603\\arm-none-eabi\\include\\s
 198              		.file 7 "f:\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.7-20190524-0603\\arm-none-eabi\\include\\s
 199              		.file 8 "f:\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.7-20190524-0603\\lib\\gcc\\arm-none-eabi\\
 200              		.file 9 "f:\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.7-20190524-0603\\arm-none-eabi\\include\\s
 201              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 202              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 203              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
ARM GAS  C:\Users\robot1\AppData\Local\Temp\cckFiL45.s 			page 8


 204              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 205              		.file 14 "f:\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.7-20190524-0603\\arm-none-eabi\\include\\
 206              		.file 15 "Inc/gpio.h"
 207              		.file 16 "Inc/usb_device.h"
ARM GAS  C:\Users\robot1\AppData\Local\Temp\cckFiL45.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
C:\Users\robot1\AppData\Local\Temp\cckFiL45.s:16     .text.SystemClock_Config:0000000000000000 $t
C:\Users\robot1\AppData\Local\Temp\cckFiL45.s:24     .text.SystemClock_Config:0000000000000000 SystemClock_Config
C:\Users\robot1\AppData\Local\Temp\cckFiL45.s:133    .text.main:0000000000000000 $t
C:\Users\robot1\AppData\Local\Temp\cckFiL45.s:140    .text.main:0000000000000000 main
C:\Users\robot1\AppData\Local\Temp\cckFiL45.s:172    .text.Error_Handler:0000000000000000 $t
C:\Users\robot1\AppData\Local\Temp\cckFiL45.s:179    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_USB_DEVICE_Init
